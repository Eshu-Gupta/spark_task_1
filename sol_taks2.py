# -*- coding: utf-8 -*-
"""Sol_Taks2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1umZ58CyUbuGXzBs9vLgG04U8xGmLQCbj

## **The Sparks Foundation: Data Science & Business Analytics Internship**

### **Task2: Prediction using Unupervised ML**

Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn import datasets

df = pd.read_csv("https://raw.githubusercontent.com/vasusakhare/The-Sparks-Foundation-Intern/main/Iris.csv")
df.head() # See the first 5 rows

df.shape

df.columns

df.info()

#Drop the columns
iris_df = df.drop(columns= ['Species' ,'Id'] )
iris_df.head()

from sklearn.cluster import KMeans
wcss = []

for i in range(1, 15):
    kmeans = KMeans(n_clusters = i, init = 'k-means++',max_iter = 300, n_init = 10, random_state = 0)
    kmeans.fit(iris_df)
    wcss.append(kmeans.inertia_)

wcss

## Plotting heat map to check correlation
import seaborn as sns
plt.figure(figsize=(10,8))
sns.heatmap(df.corr(),annot=True)

"""### Model using Kmeans Clustering"""

#Plotting line graph
plt.plot(range(1, 15), wcss)
plt.title('The elbow method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

from sklearn.cluster import KMeans

model = KMeans(n_clusters = 3, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)
predictions = model.fit_predict(iris_df)
predictions

# Data Visualisation
x = iris_df.iloc[:, [0, 1, 2, 3]].values
plt.figure(figsize=(7, 5), dpi=80)

plt.scatter(x[predictions == 0, 0], x[predictions == 0, 1], s = 50, c = 'red', label = 'Iris-setosa')
plt.scatter(x[predictions == 1, 0], x[predictions == 1, 1], s = 50, c = 'blue', label = 'Iris-versicolour')
plt.scatter(x[predictions == 2, 0], x[predictions == 2, 1], s = 50, c = 'green', label = 'Iris-virginica')

# Plotting cluster centres
plt.scatter(model.cluster_centers_[:, 0], model.cluster_centers_[:,1], s = 150, c = 'yellow', label = 'Centroids')
plt.legend()